// Code generated by MockGen. DO NOT EDIT.
// Source: github.go
//
// Generated by this command:
//
//	mockgen -source=github.go -package=repository -destination=github_mock.go
//

// Package repository is a generated GoMock package.
package repository

import (
	context "context"
	reflect "reflect"
	model "star-golang-orms/domain/model"

	gomock "go.uber.org/mock/gomock"
)

// MockGitHub is a mock of GitHub interface.
type MockGitHub struct {
	ctrl     *gomock.Controller
	recorder *MockGitHubMockRecorder
}

// MockGitHubMockRecorder is the mock recorder for MockGitHub.
type MockGitHubMockRecorder struct {
	mock *MockGitHub
}

// NewMockGitHub creates a new mock instance.
func NewMockGitHub(ctrl *gomock.Controller) *MockGitHub {
	mock := &MockGitHub{ctrl: ctrl}
	mock.recorder = &MockGitHubMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGitHub) EXPECT() *MockGitHubMockRecorder {
	return m.recorder
}

// GetRepository mocks base method.
func (m *MockGitHub) GetRepository(ctx context.Context, rn model.RepositoryName) (*model.Repository, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRepository", ctx, rn)
	ret0, _ := ret[0].(*model.Repository)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRepository indicates an expected call of GetRepository.
func (mr *MockGitHubMockRecorder) GetRepository(ctx, rn any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRepository", reflect.TypeOf((*MockGitHub)(nil).GetRepository), ctx, rn)
}

// GetStarPage mocks base method.
func (m *MockGitHub) GetStarPage(ctx context.Context, repo *model.Repository, page int) (*model.Stargazers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStarPage", ctx, repo, page)
	ret0, _ := ret[0].(*model.Stargazers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStarPage indicates an expected call of GetStarPage.
func (mr *MockGitHubMockRecorder) GetStarPage(ctx, repo, page any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStarPage", reflect.TypeOf((*MockGitHub)(nil).GetStarPage), ctx, repo, page)
}
